# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
      - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  carmarket.backoffice.imageName: 'carmarket.backoffice:$(Build.BuildId)'
  carmarket.identityserver.imageName: 'carmarket.identityserver:$(Build.BuildId)'
  carmarket.ms-users.imageName: 'carmarket.ms-users:$(Build.BuildId)'
  carmarket.sqlserver.imageName: 'carmarket.sqlserver:$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build carmarket.backoffice image
  jobs:  
  - job: Build
    displayName: Build and push Docker carmarket.backoffice image
    steps:
    - task: Docker@1
      displayName: 'Build the Docker carmarket.backoffice image'
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'Docker Azure Container Service'
        command: 'Build an image'
        imageName: '$(carmarket.backoffice.imageName)'
        includeLatestTag: true
        useDefaultContext: false
        dockerFile: Carmarket.Application.UI.Backoffice/dockerfile
        buildContext: '.'
    
    - task: Docker@1
      displayName: 'Push the Docker carmarket.backoffice image to Docker Hub'
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'Docker Azure Container Service'
        command: 'Push an image'
        imageName: '$(carmarket.backoffice.imageName)'
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
      
    - task: Docker@1
      displayName: 'Build the Docker carmarket.identityserver image'
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'Docker Azure Container Service'
        command: 'Build an image'
        imageName: '$(carmarket.identityserver.imageName)'
        includeLatestTag: true
        useDefaultContext: false
        dockerFile: Carmarket.Application.Identity.IS4/dockerfile
        buildContext: '.'
    
    - task: Docker@1
      displayName: 'Push the Docker carmarket.identityserver image to Docker Hub'
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'Docker Azure Container Service'
        command: 'Push an image'
        imageName: '$(carmarket.identityserver.imageName)'
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    
    - task: Docker@1
      displayName: 'Build the Docker carmarket.ms-users image'
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'Docker Azure Container Service'
        command: 'Build an image'
        imageName: '$(carmarket.ms-users.imageName)'
        includeLatestTag: true
        useDefaultContext: false
        dockerFile: Carmarket.Microservice.Users/dockerfile
        buildContext: '.'
    
    - task: Docker@1
      displayName: 'Push the Docker carmarket.ms-users image to Docker Hub'
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'Docker Azure Container Service'
        command: 'Push an image'
        imageName: '$(carmarket.ms-users.imageName)'
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  